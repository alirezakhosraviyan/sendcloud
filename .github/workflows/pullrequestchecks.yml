name: Pull-Request-Checks
on: [push]
jobs:
  build:
    env:
      DATABASE_URL: DATABASE_URL=postgresql+asyncpg://sendcloud:sendcloud@localhost:5432/sendcloud
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: sendcloud
          POSTGRES_PASSWORD: sendcloud
          POSTGRES_DB: sendcloud
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: cache poetry install
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: poetry-1.4.2-0

      - uses: snok/install-poetry@v1
        with:
          version: 1.4.2
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: cache deps
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: .venv
          key: pydeps-${{ hashFiles('**/poetry.lock') }}

      - run: poetry install --no-interaction --no-root
        if: steps.cache-deps.outputs.cache-hit != 'true'

      - run: poetry install --no-interaction
      - run: poetry run pytest
      - run: poetry run mypy
      - run: poetry run pylint .
      - run: poetry run flakeheaven lint